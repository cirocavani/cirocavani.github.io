<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rhel6 on Ciro Cavani</title>
    <link>http://cirocavani.github.io/tags/rhel6/</link>
    <description>Recent content in Rhel6 on Ciro Cavani</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Mon, 31 Aug 2015 22:45:23 -0300</lastBuildDate>
    <atom:link href="http://cirocavani.github.io/tags/rhel6/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Compilação do Hadoop para CentOS6 / RHEL6 usando Docker</title>
      <link>http://cirocavani.github.io/post/compilacao-do-hadoop-para-centos6-rhel6-usando-docker/</link>
      <pubDate>Mon, 31 Aug 2015 22:45:23 -0300</pubDate>
      
      <guid>http://cirocavani.github.io/post/compilacao-do-hadoop-para-centos6-rhel6-usando-docker/</guid>
      <description>

&lt;p&gt;Esse tutorial é sobre a construção do pacote do Hadoop 2.7.1 para o CentOS6 / RHEL6 usando Docker. Esse procedimento é necessário para gerar as bibliotecas nativas compatíveis. O principal objetivo que motivou esse trabalho foi configurar o FairScheduler do YARN usando CGroups rodando no Red Hat Enterprise Linux 6 (RHEL6). O pacote Hadoop distribuído pela Apache tem executável binário que não é compatível com a Glibc que faz parte do CentOS6/RHEL6.&lt;/p&gt;

&lt;p&gt;O RHEL6 é o sistema operacional homologado para as máquinas do cluster que usamos na Globo.com e foi necessário criar uma distribuição própria do Hadoop para que pudéssemos fazer uso do &lt;a href=&#34;http://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/FairScheduler.html&#34;&gt;FairScheduler&lt;/a&gt; juntamente com o &lt;a href=&#34;http://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/NodeManagerCgroups.html&#34;&gt;CGroups&lt;/a&gt; para limitar o uso de processamento entre as aplicações rodando nos mesmos NodeManagers.&lt;/p&gt;

&lt;p&gt;Esse trabalho de configuração do Hadoop para uso compartilhado será assunto de outro artigo.&lt;/p&gt;

&lt;p&gt;Nesse artigo, o foco é um passo a passo de como usar o Docker para gerar um pacote do Hadoop adaptado para o Red Hat Enterprise Linux 6 (RHEL6) usando CentOS6.&lt;/p&gt;

&lt;h2 id=&#34;pré-requisito:ac8d87b01c866329a85ac2f7311bc677&#34;&gt;Pré-requisito&lt;/h2&gt;

&lt;p&gt;Nesse procedimento, é necessário que o Docker esteja instalado e funcionando; também é necessário acesso à Internet.&lt;/p&gt;

&lt;p&gt;Originalmente, esse procedimento foi testado no ArchLinux atualizado até final de Agosto/2015.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Docker&#34;&gt;https://wiki.archlinux.org/index.php/Docker&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo docker version

&amp;gt; Client:
&amp;gt;  Version:      1.8.1
&amp;gt;  API version:  1.20
&amp;gt;  Go version:   go1.4.2
&amp;gt;  Git commit:   d12ea79
&amp;gt;  Built:        Sat Aug 15 17:29:10 UTC 2015
&amp;gt;  OS/Arch:      linux/amd64
&amp;gt;
&amp;gt; Server:
&amp;gt;  Version:      1.8.1
&amp;gt;  API version:  1.20
&amp;gt;  Go version:   go1.4.2
&amp;gt;  Git commit:   d12ea79
&amp;gt;  Built:        Sat Aug 15 17:29:10 UTC 2015
&amp;gt;  OS/Arch:      linux/amd64
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;compilação:ac8d87b01c866329a85ac2f7311bc677&#34;&gt;Compilação&lt;/h2&gt;

&lt;p&gt;Documento com instruções de build do Hadoop &lt;a href=&#34;https://github.com/apache/hadoop/blob/release-2.7.1/BUILDING.txt&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O resultado desse procedimento é um pacote do Hadoop com os executáveis e bibliotecas nativas compilados para o CentOS6 que rodam no RHEL6.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/hadoop/hadoop-2.7.1-src/hadoop-dist/target/hadoop-2.7.1.tar.gz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;Começamos com a criação de um conainer do Docker com a imagem do CentOS6.&lt;/p&gt;

&lt;p&gt;Ao executar o comando &lt;code&gt;run&lt;/code&gt;, o Docker automaticamente fará o download da imagem e a shell será inicializada dentro de um novo container.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo docker run -i -t centos:6 /bin/bash

&amp;gt; Unable to find image &#39;centos:6&#39; locally
&amp;gt; 6: Pulling from library/centos
&amp;gt;
&amp;gt; f1b10cd84249: Pull complete
&amp;gt; fb9cc58bde0c: Pull complete
&amp;gt; a005304e4e74: Already exists
&amp;gt; library/centos:6: The image you are pulling has been verified. Important: image verification is a tech preview feature and should not be relied on to provide security.
&amp;gt;
&amp;gt; Digest: sha256:25d94c55b37cb7a33ad706d5f440e36376fec20f59e57d16fe02c64698b531c1
&amp;gt; Status: Downloaded newer image for centos:6
&amp;gt; [root@3cc2bc5e593b /]#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Já dentro do container criamos um usuário e local que serão usados na compilação e geração do pacote.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;adduser -m -d /hadoop hadoop
cd hadoop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para a compilação das bibliotecas nativas é necessária a instalação do compilador C e mais alguns pacotes de desenvolvimento (cabeçalhos das bibliotecas usadas pelo Hadoop).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yum install -y tar gzip gcc-c++ cmake zlib zlib-devel openssl openssl-devel fuse fuse-devel bzip2 bzip2-devel snappy snappy-devel

&amp;gt; (...)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O Hadoop ainda depende de duas outras bibliotecas que precisam ser instaladas manualmente no CentOS: Google ProtoBuf 2.5 (RPC), Jansson (JSON).&lt;/p&gt;

&lt;p&gt;Para instalar o ProtoBuf, é necessário baixar o pacote, configurar para as pastas do CentOS (64 bits) e instalar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -L -O https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz
tar zxf protobuf-2.5.0.tar.gz
cd protobuf-2.5.0
./configure --prefix=/usr --libdir=/usr/lib64
make
make check
make install

cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para instalar o Jansson, é necessário baixar o pacote, configurar para as pastas do CentOS (64 bits) e instalar.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -O http://www.digip.org/jansson/releases/jansson-2.7.tar.gz
tar zxf jansson-2.7.tar.gz
cd jansson-2.7
./configure --prefix=/usr --libdir=/usr/lib64
make
make install

cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para completar o ambiente de compilação, precisamos do JDK e do Maven.&lt;/p&gt;

&lt;p&gt;No caso do JDK, usaremos o pacote RPM já disponibilizado pela Oracle.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -k -L -H &amp;quot;Cookie: oraclelicense=accept-securebackup-cookie&amp;quot; -O http://download.oracle.com/otn-pub/java/jdk/8u60-b27/jdk-8u60-linux-x64.rpm
rpm -i jdk-8u60-linux-x64.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No caso do Maven, usaremos o pacote binário de distribuição da Apache.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -O http://archive.apache.org/dist/maven/maven-3/3.3.3/binaries/apache-maven-3.3.3-bin.tar.gz
tar zxf apache-maven-3.3.3-bin.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O ambiente  de compilação está completo.&lt;/p&gt;

&lt;p&gt;Agora estamos pronto para a compilação do Hadoop. Nesse caso, estaremos gerando o pacote de distribuição somente com o binário Java e as bibliotecas nativas.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;su - hadoop

export PATH=$PATH:/hadoop/apache-maven-3.3.3/bin

curl -O http://archive.apache.org/dist/hadoop/common/hadoop-2.7.1/hadoop-2.7.1-src.tar.gz
tar zxf hadoop-2.7.1-src.tar.gz
cd hadoop-2.7.1-src

mvn clean package -Pdist,native -DskipTests -Drequire.snappy -Drequire.openssl -Dtar

&amp;gt; (...)
&amp;gt; main:
&amp;gt;      [exec] $ tar cf hadoop-2.7.1.tar hadoop-2.7.1
&amp;gt;      [exec] $ gzip -f hadoop-2.7.1.tar
&amp;gt;      [exec]
&amp;gt;      [exec] Hadoop dist tar available at: /hadoop/hadoop-2.7.1-src/hadoop-dist/target/hadoop-2.7.1.tar.gz
&amp;gt;      [exec]
&amp;gt; [INFO] Executed tasks
&amp;gt; [INFO]
&amp;gt; [INFO] --- maven-javadoc-plugin:2.8.1:jar (module-javadocs) @ hadoop-dist ---
&amp;gt; [INFO] Building jar: /hadoop/hadoop-2.7.1-src/hadoop-dist/target/hadoop-dist-2.7.1-javadoc.jar
&amp;gt; [INFO] ------------------------------------------------------------------------
&amp;gt; [INFO] Reactor Summary:
&amp;gt; [INFO]
&amp;gt; [INFO] Apache Hadoop Main ................................. SUCCESS [01:56 min]
&amp;gt; [INFO] Apache Hadoop Project POM .......................... SUCCESS [ 42.134 s]
&amp;gt; [INFO] Apache Hadoop Annotations .......................... SUCCESS [ 37.761 s]
&amp;gt; [INFO] Apache Hadoop Assemblies ........................... SUCCESS [  0.125 s]
&amp;gt; [INFO] Apache Hadoop Project Dist POM ..................... SUCCESS [ 23.183 s]
&amp;gt; [INFO] Apache Hadoop Maven Plugins ........................ SUCCESS [ 25.962 s]
&amp;gt; [INFO] Apache Hadoop MiniKDC .............................. SUCCESS [03:23 min]
&amp;gt; [INFO] Apache Hadoop Auth ................................. SUCCESS [02:11 min]
&amp;gt; [INFO] Apache Hadoop Auth Examples ........................ SUCCESS [ 10.145 s]
&amp;gt; [INFO] Apache Hadoop Common ............................... SUCCESS [03:29 min]
&amp;gt; [INFO] Apache Hadoop NFS .................................. SUCCESS [  4.724 s]
&amp;gt; [INFO] Apache Hadoop KMS .................................. SUCCESS [02:35 min]
&amp;gt; [INFO] Apache Hadoop Common Project ....................... SUCCESS [  0.024 s]
&amp;gt; [INFO] Apache Hadoop HDFS ................................. SUCCESS [02:15 min]
&amp;gt; [INFO] Apache Hadoop HttpFS ............................... SUCCESS [02:13 min]
&amp;gt; [INFO] Apache Hadoop HDFS BookKeeper Journal .............. SUCCESS [ 38.598 s]
&amp;gt; [INFO] Apache Hadoop HDFS-NFS ............................. SUCCESS [  3.213 s]
&amp;gt; [INFO] Apache Hadoop HDFS Project ......................... SUCCESS [  0.032 s]
&amp;gt; [INFO] hadoop-yarn ........................................ SUCCESS [  0.030 s]
&amp;gt; [INFO] hadoop-yarn-api .................................... SUCCESS [ 29.193 s]
&amp;gt; [INFO] hadoop-yarn-common ................................. SUCCESS [02:02 min]
&amp;gt; [INFO] hadoop-yarn-server ................................. SUCCESS [  0.040 s]
&amp;gt; [INFO] hadoop-yarn-server-common .......................... SUCCESS [  8.499 s]
&amp;gt; [INFO] hadoop-yarn-server-nodemanager ..................... SUCCESS [ 12.283 s]
&amp;gt; [INFO] hadoop-yarn-server-web-proxy ....................... SUCCESS [  2.359 s]
&amp;gt; [INFO] hadoop-yarn-server-applicationhistoryservice ....... SUCCESS [  5.298 s]
&amp;gt; [INFO] hadoop-yarn-server-resourcemanager ................. SUCCESS [ 15.095 s]
&amp;gt; [INFO] hadoop-yarn-server-tests ........................... SUCCESS [  3.772 s]
&amp;gt; [INFO] hadoop-yarn-client ................................. SUCCESS [  4.641 s]
&amp;gt; [INFO] hadoop-yarn-server-sharedcachemanager .............. SUCCESS [  2.433 s]
&amp;gt; [INFO] hadoop-yarn-applications ........................... SUCCESS [  0.019 s]
&amp;gt; [INFO] hadoop-yarn-applications-distributedshell .......... SUCCESS [  1.884 s]
&amp;gt; [INFO] hadoop-yarn-applications-unmanaged-am-launcher ..... SUCCESS [  1.263 s]
&amp;gt; [INFO] hadoop-yarn-site ................................... SUCCESS [  0.020 s]
&amp;gt; [INFO] hadoop-yarn-registry ............................... SUCCESS [  3.532 s]
&amp;gt; [INFO] hadoop-yarn-project ................................ SUCCESS [  3.452 s]
&amp;gt; [INFO] hadoop-mapreduce-client ............................ SUCCESS [  0.036 s]
&amp;gt; [INFO] hadoop-mapreduce-client-core ....................... SUCCESS [ 15.195 s]
&amp;gt; [INFO] hadoop-mapreduce-client-common ..................... SUCCESS [ 12.459 s]
&amp;gt; [INFO] hadoop-mapreduce-client-shuffle .................... SUCCESS [  2.645 s]
&amp;gt; [INFO] hadoop-mapreduce-client-app ........................ SUCCESS [  6.342 s]
&amp;gt; [INFO] hadoop-mapreduce-client-hs ......................... SUCCESS [  3.845 s]
&amp;gt; [INFO] hadoop-mapreduce-client-jobclient .................. SUCCESS [ 11.295 s]
&amp;gt; [INFO] hadoop-mapreduce-client-hs-plugins ................. SUCCESS [  1.546 s]
&amp;gt; [INFO] Apache Hadoop MapReduce Examples ................... SUCCESS [  4.573 s]
&amp;gt; [INFO] hadoop-mapreduce ................................... SUCCESS [  2.164 s]
&amp;gt; [INFO] Apache Hadoop MapReduce Streaming .................. SUCCESS [  7.874 s]
&amp;gt; [INFO] Apache Hadoop Distributed Copy ..................... SUCCESS [ 19.660 s]
&amp;gt; [INFO] Apache Hadoop Archives ............................. SUCCESS [  2.071 s]
&amp;gt; [INFO] Apache Hadoop Rumen ................................ SUCCESS [  3.966 s]
&amp;gt; [INFO] Apache Hadoop Gridmix .............................. SUCCESS [  3.215 s]
&amp;gt; [INFO] Apache Hadoop Data Join ............................ SUCCESS [  1.818 s]
&amp;gt; [INFO] Apache Hadoop Ant Tasks ............................ SUCCESS [  1.478 s]
&amp;gt; [INFO] Apache Hadoop Extras ............................... SUCCESS [  2.037 s]
&amp;gt; [INFO] Apache Hadoop Pipes ................................ SUCCESS [  5.880 s]
&amp;gt; [INFO] Apache Hadoop OpenStack support .................... SUCCESS [  3.407 s]
&amp;gt; [INFO] Apache Hadoop Amazon Web Services support .......... SUCCESS [ 40.013 s]
&amp;gt; [INFO] Apache Hadoop Azure support ........................ SUCCESS [ 11.557 s]
&amp;gt; [INFO] Apache Hadoop Client ............................... SUCCESS [  7.659 s]
&amp;gt; [INFO] Apache Hadoop Mini-Cluster ......................... SUCCESS [  0.042 s]
&amp;gt; [INFO] Apache Hadoop Scheduler Load Simulator ............. SUCCESS [  3.072 s]
&amp;gt; [INFO] Apache Hadoop Tools Dist ........................... SUCCESS [  8.519 s]
&amp;gt; [INFO] Apache Hadoop Tools ................................ SUCCESS [  0.014 s]
&amp;gt; [INFO] Apache Hadoop Distribution ......................... SUCCESS [ 30.616 s]
&amp;gt; [INFO] ------------------------------------------------------------------------
&amp;gt; [INFO] BUILD SUCCESS
&amp;gt; [INFO] ------------------------------------------------------------------------
&amp;gt; [INFO] Total time: 29:26 min
&amp;gt; [INFO] Finished at: 2015-09-01T00:47:31+00:00
&amp;gt; [INFO] Final Memory: 224M/785M
&amp;gt; [INFO] ------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para completar a compilação, executamos os testes, contudo, alguns deles podem apresentar falhas intermitentes (acontecem algumas vezes, outras não).&lt;/p&gt;

&lt;p&gt;Os testes podem levar algumas horas para rodar por completo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mkdir hadoop-common-project/hadoop-common/target/test-classes/webapps/test

mvn test -Pnative -Drequire.snappy -Drequire.openssl -Dmaven.test.failure.ignore=true -Dsurefire.rerunFailingTestsCount=3

&amp;gt; (...)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(alguns testes com falha intermitente)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;org.apache.hadoop.ipc.TestDecayRpcScheduler#testAccumulate&lt;/li&gt;
&lt;li&gt;org.apache.hadoop.ipc.TestDecayRpcScheduler#testPriority&lt;/li&gt;
&lt;li&gt;org.apache.hadoop.hdfs.server.datanode.TestDataNodeMetrics#testDataNodeTimeSpend&lt;/li&gt;
&lt;li&gt;org.apache.hadoop.hdfs.shortcircuit.TestShortCircuitCache#testDataXceiverHandlesRequestShortCircuitShmFailure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;No final desse procedimento, o pacote do Hadoop estará gerado em:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/hadoop/hadoop-2.7.1-src/hadoop-dist/target/hadoop-2.7.1.tar.gz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Para copiar do container para a máquina host:
&lt;br/&gt;(&lt;code&gt;3cc2bc5e593b&lt;/code&gt; é o identificador do container no Docker)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# shell na máquina
sudo docker cp 3cc2bc5e593b:/hadoop/hadoop-2.7.1-src/hadoop-dist/target/hadoop-2.7.1.tar.gz .
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;conclusão:ac8d87b01c866329a85ac2f7311bc677&#34;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Esse procedimento mostra como o Hadoop pode ser customizado para necessidades específicas e que não requer um esforço muito grande.&lt;/p&gt;

&lt;p&gt;Contudo, ter uma &amp;ldquo;versão&amp;rdquo; própria do Hadoop é uma decisão que deve ser tomada com cautela.&lt;/p&gt;

&lt;p&gt;No momento, a gente considera que essa seja a melhor escolha para o nosso trabalho na Globo.com e estamos querendo formar um time para evoluir e dar suporte a essa plataforma. O maior benefício é a liberdade de escolher como configurar e melhorar nossa infraestrutura. O custo é não ter uma empresa especializada &amp;ldquo;cuidando&amp;rdquo; dessa responsabilidade.&lt;/p&gt;

&lt;p&gt;No futuro, pode ser que mudemos esse modo de operação e busquemos uma distribuição &amp;ldquo;profissional&amp;rdquo; como Cloudera, Hortonworks ou outra.&lt;/p&gt;

&lt;p&gt;Particularmente, eu prefiro manter uma plataforma própria.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>